{
    "text": "I love it when I find a bug in four-year-old code. Today, the culprit was a routine called <a href=\"https://github.com/scripting/utils/blob/master/daveutils.js#L564\">decodeXml</a> in <a href=\"https://www.npmjs.com/package/daveutils\">daveutils</a>. It was decoding four special strings, &amp;lt; &amp;gt;How different things would be if Apple had partnered with Be instead of Next. I would have liked it because the CEO of Be was an outliner guy. Blogging would have found a natural home there. They probably wouldn't have resisted the web as the Jobs Apple did. &amp;amp; and &amp;quot;. But there's a fifth string it wasn't decoding -- &amp;apos;. This showed in an app called <a href=\"https://github.com/scripting/riverToTweets\">riverToTweets</a>, which routes tweets from rivers to Twitter accounts, such as <a href=\"https://twitter.com/nyt\">nyt</a> and <a href=\"https://twitter.com/nbariver\">nbariver</a>. It would show up with undecoded &amp;apos; strings in tweets. For <a href=\"https://twitter.com/nbariver/status/1014837759322750976\">example</a>. I had seen this for a long time and assumed the problem was deeply buried in a utility I didn't care a lot about, but it turns out it was in code that's included in almost every project I do, including sites such as \"Scripting News\". It's now fixed and deployed. Not every app has been updated yet to include the fix. These are the best bugs to fix. Ones that have been sitting there for years waiting to cause problems. :boom:",
    "created": "Thu, 05 Jul 2018 14:48:27 GMT",
    "type": "outline",
    "image": "http://scripting.com/images/2018/07/05/grandpa.png"
}