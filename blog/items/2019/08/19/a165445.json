{
    "text": "JavaScript drives program writers to outliners, because outliners are adept with dealing with nested callbacks, as opposed to the way most (all?) other languages do program flow through a flat list. In a normal language, the runtime proceeds from statement 1 to 2 and so on. I guess most JS programmers don't know about outliners, or devtools developers don't or whatever -- so instead of letting the \"problem\" be solved by editors, the language designers try to hack the language to make it better fit the editors we already use, but it just creates a hierarchic chaos that's meant not to look hierarchic. It's a total mess. So now JS is evolving to be Perl whose <a href=\"https://en.wikipedia.org/wiki/There%27s_more_than_one_way_to_do_it\">motto</a> is \"There's more than one way to do it.\" It's far better for the ecosystem if there was only one way to do everything, but something as fundamental as program flow, I doubt if even Perl has more than one way to do <i>that.</i> So Brendan Eich is not an outliner person, and neither are the people who work on the design of the language. You pretty much have to program JS in an outliner (as I do) to see this, imho. But before they hack the language again, see if the problem isn't the dev tools, not the language. Nothing wrong with callback hell imho if you have the right editor. ",
    "created": "Mon, 19 Aug 2019 16:54:45 GMT",
    "type": "outline",
    "image": "http://scripting.com/images/2019/08/19/deweyDefeatsTruman.png"
}